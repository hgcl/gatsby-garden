{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/3-literature/every-note-should-have-three-types-of-links","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"every-note-should-have-three-types-of-links\"\n  }, \"Every Note Should Have Three Types of Links\"), mdx(\"p\", null, \"Houtz argues that every note of a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"] should link to at least three types of notes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Upwards \\u2014 link to a more general idea. For example, this current note can link to [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../7-tk/tk-how-to-connect-notes\",\n    \"title\": \"How to Connect Notes\"\n  }, \"tk-how-to-connect-notes\"), \"].\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Downwards \\u2014 link to a more specific idea. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[zettelkasten-method]]\"), \" note can point to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[literature-notes]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Laterally \\u2014 link to a related topic. These related topics are the ones that would typically crop up in the \\\"Relevant notes\\\" section of a note.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../1-reference/%C2%A7make-your-notes-work-for-you-2020\",\n    \"title\": \"Make Your Notes Work for You (2020)\"\n  }, \"\\xA7make-your-notes-work-for-you-2020\"), \"]\"), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../4-permanent/tk-notes\",\n    \"title\": \"TK Notes\"\n  }, \"tk-notes\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zettelkasten-method\"\n  }, \"Zettelkasten Method\"), mdx(\"p\", null, \"The Zettelkasten Method was created by [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../6-people/niklas-luhmann\",\n    \"title\": \"Niklas Luhmann\"\n  }, \"niklas-luhmann\"), \"] in the 20th century.\"), mdx(\"p\", null, \"It consisted of a system of paper cards that were linked to one another in a web of ideas. As each card encompasses only one atomic concept, it can easily be connected to cards about completely different topics.\"), mdx(\"p\", null, \"Luhmann organized his cards by separating them between [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"literature-notes\",\n    \"title\": \"Literature Notes\"\n  }, \"literature-notes\"), \"] and [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"permanent-notes\",\n    \"title\": \"Permanent Notes\"\n  }, \"permanent-notes\"), \"]. He also used a consistent referencing method to give a unique ID to each of his notes.\"), mdx(\"p\", null, \"The use of his Zettelkasten over several years allowed Luhmann to develop a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"second-brain\",\n    \"title\": \"Second Brain\"\n  }, \"second-brain\"), \"]\\u2014or thinking companion.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../1-reference/%C2%A7communicating-with-slip-boxes-1992\",\n    \"title\": \"Communicating With Slip Boxes (1992)\"\n  }, \"\\xA7communicating-with-slip-boxes-1992\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2b1a5a22-28c8-5311-a776-02822edebcd7","fields":{"slug":"/3-literature/zettelkasten-method","title":"Zettelkasten Method"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"tk\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-connect-notes\"\n  }, \"How to Connect Notes\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"63f021c4-740b-5f24-a71e-7fe6c3b697a1","fields":{"slug":"/7-tk/tk-how-to-connect-notes","title":"How to Connect Notes"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"literature-notes\"\n  }, \"Literature Notes\"), mdx(\"p\", null, \"A literature note is a type of note that is part of the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"].\"), mdx(\"p\", null, \"Literature notes stem from [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"fleeting-notes\",\n    \"title\": \"Fleeting Notes\"\n  }, \"fleeting-notes\"), \"] that have passed the curation filter. A literature note encompasses only one atomic idea or concept. Therefore, one fleeting note might lead to multiple literature notes.\"), mdx(\"p\", null, \"A literature note follows the following four criteria:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"One literature note represents one atomic idea.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It should be written in your own words.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write it in a way that you would understand it in 10 years.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Always include references inline (Ahrens, 2017, pp.110) and at the end of your note (eg. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Ahrens, S. (2017). How to take smart notes: One simple technique.\"), \")\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../1-reference/%C2%A7zettelkasten-method-2020\",\n    \"title\": \"Zettelkasten Method (2020)\"\n  }, \"\\xA7zettelkasten-method-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c664df0f-a463-509d-8bcf-34dfddedc5a7","fields":{"slug":"/3-literature/literature-notes","title":"Literature Notes"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://medium.com/@philhoutz/make-your-notes-work-for-you-the-secret-sauce-of-zettelkasten-cb901a3cce00\",\n  \"author\": \"Phil Houtz\",\n  \"publishingdate\": 2020,\n  \"dateretrieved\": \"2020-12-10T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"make-your-notes-work-for-you-2020\"\n  }, \"Make Your Notes Work for You (2020)\"), mdx(\"p\", null, \"Houtz was struggling creating the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../3-literature/second-brain\",\n    \"title\": \"Second Brain\"\n  }, \"second-brain\"), \"] [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../6-people/niklas-luhmann\",\n    \"title\": \"Niklas Luhmann\"\n  }, \"niklas-luhmann\"), \"] was describing\\u2014a.k.a. a thinking companion. He realized that to foster serendipity and surprising connections, he had to improve his way of making links between notes. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Here it is in a nutshell, when possible every note should have at least three types of links. \"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more general idea. If you\\u2019re writing about the diet of guinea pigs you might link to the nutritional requirements of rodents in general.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more specific idea. Here you could link to protein requirements of guinea pigs.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A related topic. This could be a lateral leap \\u2014 guinea pigs as pets, alternate meanings of \\u201Cguinea pig\\u201D, an article on \\u201Cis a guinea pig a pig?\\u201D\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../3-literature/every-note-should-have-three-types-of-links\",\n    \"title\": \"Every Note Should Have Three Types of Links\"\n  }, \"every-note-should-have-three-types-of-links\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"0ca6a6bc-6332-515d-bc70-499871a098ba","fields":{"slug":"/1-reference/§make-your-notes-work-for-you-2020","title":"Make Your Notes Work for You (2020)"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tk-notes\"\n  }, \"TK Notes\"), mdx(\"p\", null, \"I first heard of TK\\u2014a.k.a. to come\\u2014from [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../1-reference/%C2%A7make-your-notes-work-for-you-2020\",\n    \"title\": \"Make Your Notes Work for You (2020)\"\n  }, \"\\xA7make-your-notes-work-for-you-2020\"), \"]. The article itself refers to the journalistic use of TK to signify that more material will come later\", \"\\xA0\", mdx(\"sup\", null, \"1\"), \".\"), mdx(\"p\", null, \"In [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"types-of-notes\",\n    \"title\": \"Types of Notes\"\n  }, \"types-of-notes\"), \"], I add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#tk\"), \" tag to notes I create on the fly and don't intend to deepen soon.\"), mdx(\"p\", null, \"What is the difference between [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../3-literature/fleeting-notes\",\n    \"title\": \"Fleeting Notes\"\n  }, \"fleeting-notes\"), \"] and TK notes? Fleeting notes are in my inbox and are active work-in-progress. TK notes are not active notes. They are just ideas that might never come to life, as they might never get written at all.\"), mdx(\"hr\", null), mdx(\"sup\", null, \"1\"), \"\\xA0Wikipedia [To come (publishing)](https://en.wikipedia.org/wiki/To_come_(publishing)) article\");\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4b4fa3b8-7dec-5944-a5c0-a3777be78239","fields":{"slug":"/4-permanent/tk-notes","title":"TK Notes"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://medium.com/@philhoutz/make-your-notes-work-for-you-the-secret-sauce-of-zettelkasten-cb901a3cce00\",\n  \"author\": \"Phil Houtz\",\n  \"publishingdate\": 2020,\n  \"dateretrieved\": \"2020-12-10T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"make-your-notes-work-for-you-2020\"\n  }, \"Make Your Notes Work for You (2020)\"), mdx(\"p\", null, \"Houtz was struggling creating the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../3-literature/second-brain\",\n    \"title\": \"Second Brain\"\n  }, \"second-brain\"), \"] [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../6-people/niklas-luhmann\",\n    \"title\": \"Niklas Luhmann\"\n  }, \"niklas-luhmann\"), \"] was describing\\u2014a.k.a. a thinking companion. He realized that to foster serendipity and surprising connections, he had to improve his way of making links between notes. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Here it is in a nutshell, when possible every note should have at least three types of links. \"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more general idea. If you\\u2019re writing about the diet of guinea pigs you might link to the nutritional requirements of rodents in general.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more specific idea. Here you could link to protein requirements of guinea pigs.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A related topic. This could be a lateral leap \\u2014 guinea pigs as pets, alternate meanings of \\u201Cguinea pig\\u201D, an article on \\u201Cis a guinea pig a pig?\\u201D\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../3-literature/every-note-should-have-three-types-of-links\",\n    \"title\": \"Every Note Should Have Three Types of Links\"\n  }, \"every-note-should-have-three-types-of-links\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"0ca6a6bc-6332-515d-bc70-499871a098ba","fields":{"slug":"/1-reference/§make-your-notes-work-for-you-2020","title":"Make Your Notes Work for You (2020)"}}}]},"fields":{"slug":"/3-literature/every-note-should-have-three-types-of-links","title":"Every Note Should Have Three Types of Links"}}},"pageContext":{"id":"66eb4701-49ab-5814-a724-7fd66953b837"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}