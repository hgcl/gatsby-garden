{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/3-literature/conceptual-or-measurable-graphic","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"conceptual-or-measurable-graphic\"\n  }, \"Conceptual or Measurable Graphic\"), mdx(\"p\", null, \"In data visualization, graphics are classified along two axis. \\\"Conceptual or measurable\\\" refers to the first axis\\u2014the second axis being [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"explanatory-or-exploratory-graphic\",\n    \"title\": \"Explanatory or Exploratory Graphic\"\n  }, \"explanatory-or-exploratory-graphic\"), \"].\"), mdx(\"p\", null, \"This first axis describes to the nature of your raw data or message. \"), mdx(\"p\", null, \"Are they statistics, numbers or quantities? If so, your data is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"measurable\"), \". You can  easily translate it into charts.\"), mdx(\"p\", null, \"On the other side, your data might not be measurable but more \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"conceptual\"), \". It might  be necessary to use illustrations to translate it into a visual message.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../2-fleeting/%C2%A7data-visualization-handbook-2020\",\n    \"title\": \"Data Visualization Handbook (2020)\"\n  }, \"\\xA7data-visualization-handbook-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"explanatory-or-exploratory-graphic\"\n  }, \"Explanatory or Exploratory Graphic\"), mdx(\"p\", null, \"In data visualization, graphics are classified along two axis. \\\"Explanatory or exploratory\\\" refers to the second axis\\u2014the first axis being [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"conceptual-or-measurable-graphic\",\n    \"title\": \"Conceptual or Measurable Graphic\"\n  }, \"conceptual-or-measurable-graphic\"), \"].\"), mdx(\"p\", null, \"While the first axis focuses on the nature of your data, the second axis focuses on what you do with it. \"), mdx(\"p\", null, \"An \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"explanatory\"), \" graphic will be used to explain or declare some known facts. \"), mdx(\"p\", null, \"On the other hands, a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"exploratory\"), \" graphic will be used to investigate a dataset and it usually leads to open interpretations and questions.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../2-fleeting/%C2%A7data-visualization-handbook-2020\",\n    \"title\": \"Data Visualization Handbook (2020)\"\n  }, \"\\xA7data-visualization-handbook-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b615b4c9-3c97-528b-9ee1-d27679d584f6","fields":{"slug":"/3-literature/explanatory-or-exploratory-graphic","title":"Explanatory or Exploratory Graphic"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"author\": null,\n  \"publishingdate\": 2020,\n  \"pagenumber\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"data-visualization-handbook-2020\"\n  }, \"Data Visualization Handbook (2020)\"), mdx(\"h2\", {\n    \"id\": \"1-introduction\"\n  }, \"1. Introduction\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The purpose of visualization is insight, not pictures\\n\\u2014 Ben Shneiderman\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The most important decision in making a map is not what to put in, but what to leave out\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Definition of [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../3-literature/information-design\",\n    \"title\": \"Information Design\"\n  }, \"information-design\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The selection of the presentation method and a layout for the information, taking into account the capabilities and limitations of the visual system, is called information design. (p. 20)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Information design is about presenting information in the clearest way possible. According to the definition suggested by the researcher Robert E. Horn (2000), information design is \\u201Cthe art and science of preparing information so that it can be used by human beings with efficiency and effectiveness.\\u201D Clarifying the structure of data presented in written form or in a table also falls under this definition, but the concept refers above all to creating visual displays of information. Information design consists of selecting, organizing and presenting information, taking into account the needs and characteristics of the selected target audience, and the context of use. (p. 23)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../3-literature/downsides-of-separating-graphic-and-information-design\",\n    \"title\": \"Downsides of Separating Graphic and Information Design\"\n  }, \"downsides-of-separating-graphic-and-information-design\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"survey by pharmacist trade magazine Kairenius (2012) showed that patient safety is compromised on a weekly basis in 30% of pharmacies, due to packaging too similar to each other. Branding > Clarity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"same with Google rebranding example!\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Terminology on two axes [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../3-literature/infographics-vs-visualizations\",\n    \"title\": \"Infographics vs Visualizations\"\n  }, \"infographics-vs-visualizations\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(1) conceptual-measurable (2) explanatory-exploratory\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rule of thumb: explanatory = infographics // measurable = visualization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a measurable explanatory graphic can be both\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data art vs Visualization\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If then the presentation method is decided based on data, it is a visualization, but if data is picked to fit a chosen presentation method, it is data art. (p. 29)\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Symbols and glyphs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In his book The design of everyday things, Donald A. Norman, a pioneer of user-centered design, distinguishes between additive and substitutive dimensions in user interfaces Additive values such as length can be changed incrementally and are used to indicate varying amounts of something. Substitutive values such as color hue cannot be changed in size but only substituted for another value and are used to indicate categories. (p. 31)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Symbols = substitutive (e.g. icons) // glyphs = additive (e.g. bar charts)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Natural mapping = take advantage of this natural mapping, in other words visuals that fluctuate in size represent measurable things, whereas things that can only be substituted represent categories\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplify\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a single number is not worth visualizing, smaller sets are understood better when in a table or in written form\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Want to visualize a single number? Compare it to a reference point to get a reference (e.g. how many X can you fit in a football field)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Compare\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Edward Tufte writes that \\u201CAt the heart of quantitative reasoning is a single question: Compared to what?\\u201D A visualization is at its heart, a tool for making comparisons. Thus the single most important question to answer when designing one is: what comparisons should be enabled? (p. 35)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"designer job = define which comparisons are the most important and use the most effective encoding methods for them first\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6 types of relationships / comparisons\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Numbers: quantities, sizes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rank: same as numbers but divided by ranges (so not as precise)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Location: geographic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Time: timeline, positions in time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Categories: qualitative\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connections: types of links between data points\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Organize\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Golden reading\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the golden rule is to choose the clearest presentation method available\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"micro macro reading\")))), mdx(\"h2\", {\n    \"id\": \"visual-perception-in-action\"\n  }, \"Visual perception in action\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visual queries\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We can only see accurately the size of a US coin at arms length. However we don't notice this restriction as our eyes move constantly to take in the environment (=gist)\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"5a1d8d13-5893-5e43-b2ee-b788766962dc","fields":{"slug":"/2-fleeting/§data-visualization-handbook-2020","title":"Data Visualization Handbook (2020)"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"infographics-vs-visualizations\"\n  }, \"Infographics vs Visualizations\"), mdx(\"p\", null, \"In data visualization, graphics can be classified along two axis:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First axis\\u2014[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"conceptual-or-measurable-graphic\",\n    \"title\": \"Conceptual or Measurable Graphic\"\n  }, \"conceptual-or-measurable-graphic\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Second axis\\u2014[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"explanatory-or-exploratory-graphic\",\n    \"title\": \"Explanatory or Exploratory Graphic\"\n  }, \"explanatory-or-exploratory-graphic\"), \"]\")), mdx(\"p\", null, \"In general, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"visualizations\"), \" are used to represent data that is measurable (first axis), such as statistics.\"), mdx(\"p\", null, \"On the other hand, what we call \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"infographics\"), \" are usually explanatory (second axis) and will therefore use illustrations to explain the more conceptual messages. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: if a message is too conceptual, it will not be possible to represent it visually at all.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../2-fleeting/%C2%A7data-visualization-handbook-2020\",\n    \"title\": \"Data Visualization Handbook (2020)\"\n  }, \"\\xA7data-visualization-handbook-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b438189c-525e-5ea2-93e0-f8449fae61d2","fields":{"slug":"/3-literature/infographics-vs-visualizations","title":"Infographics vs Visualizations"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"explanatory-or-exploratory-graphic\"\n  }, \"Explanatory or Exploratory Graphic\"), mdx(\"p\", null, \"In data visualization, graphics are classified along two axis. \\\"Explanatory or exploratory\\\" refers to the second axis\\u2014the first axis being [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"conceptual-or-measurable-graphic\",\n    \"title\": \"Conceptual or Measurable Graphic\"\n  }, \"conceptual-or-measurable-graphic\"), \"].\"), mdx(\"p\", null, \"While the first axis focuses on the nature of your data, the second axis focuses on what you do with it. \"), mdx(\"p\", null, \"An \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"explanatory\"), \" graphic will be used to explain or declare some known facts. \"), mdx(\"p\", null, \"On the other hands, a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"exploratory\"), \" graphic will be used to investigate a dataset and it usually leads to open interpretations and questions.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../2-fleeting/%C2%A7data-visualization-handbook-2020\",\n    \"title\": \"Data Visualization Handbook (2020)\"\n  }, \"\\xA7data-visualization-handbook-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b615b4c9-3c97-528b-9ee1-d27679d584f6","fields":{"slug":"/3-literature/explanatory-or-exploratory-graphic","title":"Explanatory or Exploratory Graphic"}}}]},"fields":{"slug":"/3-literature/conceptual-or-measurable-graphic","title":"Conceptual or Measurable Graphic"}}},"pageContext":{"id":"a5f1594b-de05-5606-80b0-bd889eba4487"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}