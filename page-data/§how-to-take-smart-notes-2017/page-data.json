{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/§how-to-take-smart-notes-2017","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"book\"],\n  \"author\": \"Sönke Ahrens\",\n  \"publishingdate\": \"2017\",\n  \"pagenumber\": 178\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-take-smart-notes-2017\"\n  }, \"How to Take Smart Notes (2017)\"), mdx(\"h2\", {\n    \"id\": \"info\"\n  }, \"Info\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Topics: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]\")), mdx(\"p\", null, \"NOT READ, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://durmonski.com/book-summaries/how-to-take-smart-notes/\"\n  }, \"here is a good summary\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zettelkasten-method\"\n  }, \"Zettelkasten Method\"), mdx(\"p\", null, \"The Zettelkasten Method was created by [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"niklas-luhmann\",\n    \"title\": \"Niklas Luhmann\"\n  }, \"niklas-luhmann\"), \"] in the 20th century.\"), mdx(\"p\", null, \"It consisted of a system of paper cards that were linked to one another in a web of ideas. As each card encompasses only one atomic concept, it can easily be connected to cards about completely different topics.\"), mdx(\"p\", null, \"Luhmann organized his cards by separating them between [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"literature-notes\",\n    \"title\": \"Literature Notes\"\n  }, \"literature-notes\"), \"] and [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"permanent-notes\",\n    \"title\": \"Permanent Notes\"\n  }, \"permanent-notes\"), \"]. He also used a consistent referencing method to give a unique ID to each of his notes.\"), mdx(\"p\", null, \"The use of his Zettelkasten over several years allowed Luhmann to develop a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"second-brain\",\n    \"title\": \"Second Brain\"\n  }, \"second-brain\"), \"]\\u2014that he called his thinking companion.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7communicating-with-slip-boxes-1992\",\n    \"title\": \"Communicating With Slip Boxes (1992)\"\n  }, \"\\xA7communicating-with-slip-boxes-1992\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1db29981-93e7-5e64-8ea0-030369496b7d","fields":{"slug":"/zettelkasten-method","title":"Zettelkasten Method"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://medium.com/@rebeccawilliams9941/the-zettelkasten-method-examples-to-help-you-get-started-8f8a44fa9ae6\",\n  \"author\": \"Rebecca Williams\",\n  \"publishingdate\": \"2020\",\n  \"dateretrieved\": \"2020-11-22\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zettelkasten-method-2020\"\n  }, \"Zettelkasten Method (2020)\"), mdx(\"h2\", {\n    \"id\": \"info\"\n  }, \"Info\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Topics: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"References: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"%C2%A7how-to-take-smart-notes-2017\",\n    \"title\": \"How to Take Smart Notes (2017)\"\n  }, \"\\xA7how-to-take-smart-notes-2017\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"questions\"\n  }, \"Questions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What was the first source for this article?\")), mdx(\"h2\", {\n    \"id\": \"notes\"\n  }, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"fleeting-notes\",\n    \"title\": \"Fleeting Notes\"\n  }, \"fleeting-notes\"), \"]\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FN are reminders of ideas and concepts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FN must follow at least one of 2 criteria:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to remember this idea permanently\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to use the idea in your work\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always reference the source and author\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"literature-notes\",\n    \"title\": \"Literature Notes\"\n  }, \"literature-notes\"), \"]\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After filtering out the fleeting notes that speak to me, I get my LN\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Elaborate those FN\\u2014those reminders\\u2014into a paragraph that fully describes the idea\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write it as if writing to someone else\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LN follow 4 criteria:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LN should be written in your own words\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Written in a way that you understand it in 10 years\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 note = 1 idea\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Include reference (Last Name, year, pp.22) inline and complete source at the bottom\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eg. Ahrens, S. (2017). How to take smart notes: One simple technique.\"))))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"permanent-notes\",\n    \"title\": \"Permanent Notes\"\n  }, \"permanent-notes\"), \"] \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PN vs. LN\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LN written in the context of the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"source\"), \". PN written in context of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"your own ideas and interests\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LN have one connection (= source). PN can have many.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 note = 1 idea, as it is easier to connect with other ideas\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to connect permanent notes, examples: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A term mentioned in a note which links to a term definition note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An author mentioned in a note which links to an author biography note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A note which directly contradicts findings in a note that contains a fact, study, opinion.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A note which adds something to the existing note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A personal comment on the idea contained in another note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a bridge note\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connect with a topic index note\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"index-notes\",\n    \"title\": \"Index Notes\"\n  }, \"index-notes\"), \"]\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Represents a cluster of PN (that you detect after a while)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They are similar to an individual article outline, table of content of an article\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Created from content that already exists\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keyword notes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An index note = table of content of an article\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A KN = table of content of a book (= broader topic), eg. art\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Index notes are often linked inside of KN. Eg. Art (KN) > Art goals (IN)\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"63d01327-d7ef-514b-b57b-94fed9244006","fields":{"slug":"/§zettelkasten-method-2020","title":"Zettelkasten Method (2020)"}}}]},"fields":{"slug":"/§how-to-take-smart-notes-2017","title":"How to Take Smart Notes (2017)"}}},"pageContext":{"id":"0ccc232b-bb76-56c1-8ced-6fe1d5c89122"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}