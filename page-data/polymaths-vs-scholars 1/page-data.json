{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/polymaths-vs-scholars 1","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"polymaths-vs-scholars\"\n  }, \"Polymaths vs Scholars\"), mdx(\"p\", null, \"The key differentiation between a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"polymath\",\n    \"title\": \"Polymath\"\n  }, \"polymath\"), \"] and a scholar is the application of learnings ([\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"salman-ansari\",\n    \"title\": \"Salman Ansari\"\n  }, \"salman-ansari\"), \"]).\"), mdx(\"p\", null, \"A polymath uses what he learns from varied fields to connect ideas and solve problems in real life. \"), mdx(\"p\", null, \"A scholar learns for the sake of learning, it is an end in itself. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7the-definition-of-a-polymath\",\n    \"title\": \"The Definition of a Polymath\"\n  }, \"\\xA7the-definition-of-a-polymath\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"polymath\"\n  }, \"Polymath\"), mdx(\"p\", null, \"I use [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"salman-ansari\",\n    \"title\": \"Salman Ansari\"\n  }, \"salman-ansari\"), \"]\\u2019s definition of the word polymath in [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7the-definition-of-a-polymath\",\n    \"title\": \"The Definition of a Polymath\"\n  }, \"\\xA7the-definition-of-a-polymath\"), \"].\"), mdx(\"p\", null, \"The short version says that \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"polymath\"), \" is a fancy word for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"generalist\"), \".\"), mdx(\"p\", null, \"The longer version says that a polymath:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"learns extensively from different fields\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"brings those learnings together to solve problems in unique ways\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7the-definition-of-a-polymath\",\n    \"title\": \"The Definition of a Polymath\"\n  }, \"\\xA7the-definition-of-a-polymath\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"55fab329-a838-51c0-bf4f-98d7c82dab4b","fields":{"slug":"/polymath","title":"Polymath"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"people\"],\n  \"name\": \"Salman Ansari\",\n  \"website\": \"https://salman.io/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"salman-ansari\"\n  }, \"Salman Ansari\"), mdx(\"p\", null, \"His about page:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD83E\\uDD8A Hey there! I\\u2019m Salman. I write the Quick Brown Fox newsletter \\u2014 it\\u2019s about creativity, curiosity and embracing a polymath lifestyle. Each edition features essays, art and resources shared in the spirit of learning in public. \")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b0fac089-8483-523d-b92d-159a005d54aa","fields":{"slug":"/salman-ansari","title":"Salman Ansari"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [[\"reference\", \"article\"]],\n  \"author\": \"Salman Ansari\",\n  \"source\": \"https://salman.io/notes/the-definition-of-a-polymath\",\n  \"dateretrieved\": \"2020-12-07\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"the-definition-of-a-polymath\"\n  }, \"The Definition of a Polymath\"), mdx(\"p\", null, \"In [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"salman-ansari\",\n    \"title\": \"Salman Ansari\"\n  }, \"salman-ansari\"), \"]\\u2019s words, a polymath is someone who:\"), mdx(\"blockquote\", null, mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Engages in extended learning in disparate fields, industries and/or skills.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Applies learnings by connecting ideas from different areas to solve problems in unique ways.\"))), mdx(\"p\", null, \"The following quote also resonated with me. Do I tend to be a scholar?\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In my view, the key is application of learnings. I think if you\\u2019re learning about a ton of fields without applying them in practice, that makes you more of a scholar than a polymath (and more power to you!). \")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f2cdcf82-3732-5823-bb89-b7c60079665e","fields":{"slug":"/§the-definition-of-a-polymath","title":"The Definition of a Polymath"}}}],"inboundReferences":[]},"fields":{"slug":"/polymaths-vs-scholars 1","title":"Polymaths vs Scholars"}}},"pageContext":{"id":"dbc2b5db-521a-572c-906d-74704536bf72"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}