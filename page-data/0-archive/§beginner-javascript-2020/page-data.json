{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/0-archive/§beginner-javascript-2020","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"archive\", \"reference\", \"class\"],\n  \"source\": \"https://beginnerjavascript.coos\",\n  \"author\": \"Wes Bos\",\n  \"dateretrieved\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"beginner-javascript-2020\"\n  }, \"Beginner Javascript (2020)\"), mdx(\"h2\", {\n    \"id\": \"info\"\n  }, \"Info\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Topics:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Synopsis: Learn Javascript basics\")), mdx(\"h2\", {\n    \"id\": \"notes\"\n  }, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Module 1\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to comment out?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"alt + shift + a\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cmd + /\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Where run javascript?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<body><script src=\\\"./functionfile.js\\\"></script></body>\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 types of variables\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"var first = \\\"cl\\\";\"), \" variable declaration statement (function scoped)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"let age = 300;\"), \" (block scoped)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const cool = true;\"), \" use first, constant variable that cannot be changed -> ex: API key (block scoped)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is also possible to create variables on the fly by having \", \"`\", \"Hello \\\\${newVariableName};\", \"`\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Module 2\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parameteres and arguments\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/wesbos/beginner-javascript/blob/master/function-definition.jpg\"\n  }, \"Cheat sheet\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Parameters\"), \" are the placeholders of the function\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parameters from different functions can use the same name, they won\\u2018t overwrite each other.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Default value of a parameter: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function hey(name = 'Clara') { ... }\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If there are multiple default parameters in one function, the argument that have to default must be marked \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Arguments\"), \" are actual values replacing the parameters when the function is invoked\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to declare a function\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Regular way: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function helloYay(hey) { ... };\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Function expression: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const helloYay = function (hey) { ... };\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses the anonymous function: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function (hey) { ... };\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These functions are not hoisted (brought to the top)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arrow function: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const inchToCm = (inches) => inches * 2.54;\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses a shortened anon function, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=>\"), \" replaces \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implicit return to fit one line\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"()\"), \" of parameters can be removed if only one parameter\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IIFE (Immediately Invoked Function Expression)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(function() { console.log('Hello there'); }) ();\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Methods\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Function that lives inside of an object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. console.log(\\u2018hey\\u2019)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"log is a function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"console is an object\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const wes = { name: 'Bos', sayHi: function() { ... } }\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can call the method \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"wes.sayHi()\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usually use method shorthand: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sayHi()\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sayHi: function()\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Callback function\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CWhen someone clicks something, run this\\u201D or \\u201CWhen duration passed, run this\\u201D.\")))))))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/0-archive/§beginner-javascript-2020","title":"Beginner Javascript (2020)"}}},"pageContext":{"id":"a9a2b09a-2ae9-5517-a354-06601050e4b7"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}