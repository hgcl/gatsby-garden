{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Â§make-your-notes-work-for-you-2020","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://medium.com/@philhoutz/make-your-notes-work-for-you-the-secret-sauce-of-zettelkasten-cb901a3cce00\",\n  \"author\": \"Phil Houtz\",\n  \"publishingdate\": \"2020\",\n  \"dateretrieved\": \"2020-12-10\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"make-your-notes-work-for-you-2020\"\n  }, \"Make Your Notes Work for You (2020)\"), mdx(\"p\", null, \"Houtz was struggling creating the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/second-brain\",\n    \"title\": \"second-brain\"\n  }, \"[[second-brain]]\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/niklas-luhmann\",\n    \"title\": \"niklas-luhmann\"\n  }, \"[[niklas-luhmann]]\"), \" was describing\\u2014a.k.a. a thinking companion. He realized that to foster serendipity and surprising connections, he had to improve his way of making links between notes. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Here it is in a nutshell, when possible every note should have at least three types of links. \"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more general idea. If you\\u2019re writing about the diet of guinea pigs you might link to the nutritional requirements of rodents in general.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A link to a more specific idea. Here you could link to protein requirements of guinea pigs.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A related topic. This could be a lateral leap \\u2014 guinea pigs as pets, alternate meanings of \\u201Cguinea pig\\u201D, an article on \\u201Cis a guinea pig a pig?\\u201D\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/every-note-should-have-three-types-of-links\",\n    \"title\": \"every-note-should-have-three-types-of-links\"\n  }, \"[[every-note-should-have-three-types-of-links]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"second-brain\"\n  }, \"Second Brain\"), mdx(\"p\", null, \"When creating the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"], \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/niklas-luhmann\",\n    \"title\": \"niklas-luhmann\"\n  }, \"[[niklas-luhmann]]\"), \" realized that a \\u201Csecondary memory\\u201D was born out of his network of cards and ideas.\"), mdx(\"p\", null, \"In some ways, the web of notes takes a life of its own, making connections where your conscious mind wouldn\\u2018t have done so, resulting in a separate entity\\u2014a thinking companion.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7communicating-with-slip-boxes-1992\",\n    \"title\": \"Communicating With Slip Boxes (1992)\"\n  }, \"\\xA7communicating-with-slip-boxes-1992\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b6eb91a0-8930-5b16-836e-46fac99dcda9","fields":{"slug":"/second-brain","title":"Second Brain"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"people\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"niklas-luhmann\"\n  }, \"Niklas Luhmann\"), mdx(\"p\", null, \"Inventor of the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3f9c84e8-f2a8-5302-9191-76ad603afe3d","fields":{"slug":"/niklas-luhmann","title":"Niklas Luhmann"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"every-note-should-have-three-types-of-links\"\n  }, \"Every Note Should Have Three Types of Links\"), mdx(\"p\", null, \"Houtz argues that every note of a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"] should link to at least three types of notes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Upwards \\u2014 link to a more general idea. For example, this current note can link to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tk-how-to-connect-notes\",\n    \"title\": \"tk-how-to-connect-notes\"\n  }, \"[[tk-how-to-connect-notes]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Downwards \\u2014 link to a more specific idea. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[zettelkasten-method]]\"), \" note can point to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[literature-notes]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Laterally \\u2014 link to a related topic. These related topics are the ones that would typically crop up in the \\\"Relevant notes\\\" section of a note.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7make-your-notes-work-for-you-2020\",\n    \"title\": \"Make Your Notes Work for You (2020)\"\n  }, \"\\xA7make-your-notes-work-for-you-2020\"), \"]\"), mdx(\"p\", null, \"Relevant notes: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/tk-notes\",\n    \"title\": \"tk-notes\"\n  }, \"[[tk-notes]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"36e2f042-2622-5ebd-a4e9-b1c5b231fe72","fields":{"slug":"/every-note-should-have-three-types-of-links","title":"Every Note Should Have Three Types of Links"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tk-notes\"\n  }, \"TK Notes\"), mdx(\"p\", null, \"I first heard of TK\\u2014a.k.a. to come\\u2014from [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7make-your-notes-work-for-you-2020\",\n    \"title\": \"Make Your Notes Work for You (2020)\"\n  }, \"\\xA7make-your-notes-work-for-you-2020\"), \"]. The article itself refers to the journalistic use of TK to signify that more material will come later\", \"\\xA0\", mdx(\"sup\", null, \"1\"), \".\"), mdx(\"p\", null, \"In [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"types-of-notes\",\n    \"title\": \"Types of Notes\"\n  }, \"types-of-notes\"), \"], I add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#tk\"), \" tag to notes I create on the fly and don't intend to deepen soon.\"), mdx(\"p\", null, \"What is the difference between [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"fleeting-notes\",\n    \"title\": \"Fleeting Notes\"\n  }, \"fleeting-notes\"), \"] and TK notes? Fleeting notes are in my inbox and are active work-in-progress. TK notes are not active notes. They are just ideas that might never come to life, as they might never get written at all.\"), mdx(\"hr\", null), mdx(\"sup\", null, \"1\"), \"\\xA0Wikipedia [To come (publishing)](https://en.wikipedia.org/wiki/To_come_(publishing)) article\");\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f144bbfc-826f-5dbd-9b00-fbee287ec624","fields":{"slug":"/tk-notes","title":"TK Notes"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"every-note-should-have-three-types-of-links\"\n  }, \"Every Note Should Have Three Types of Links\"), mdx(\"p\", null, \"Houtz argues that every note of a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"] should link to at least three types of notes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Upwards \\u2014 link to a more general idea. For example, this current note can link to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tk-how-to-connect-notes\",\n    \"title\": \"tk-how-to-connect-notes\"\n  }, \"[[tk-how-to-connect-notes]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Downwards \\u2014 link to a more specific idea. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[zettelkasten-method]]\"), \" note can point to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[literature-notes]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Laterally \\u2014 link to a related topic. These related topics are the ones that would typically crop up in the \\\"Relevant notes\\\" section of a note.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7make-your-notes-work-for-you-2020\",\n    \"title\": \"Make Your Notes Work for You (2020)\"\n  }, \"\\xA7make-your-notes-work-for-you-2020\"), \"]\"), mdx(\"p\", null, \"Relevant notes: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/tk-notes\",\n    \"title\": \"tk-notes\"\n  }, \"[[tk-notes]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"36e2f042-2622-5ebd-a4e9-b1c5b231fe72","fields":{"slug":"/every-note-should-have-three-types-of-links","title":"Every Note Should Have Three Types of Links"}}}]},"fields":{"slug":"/Â§make-your-notes-work-for-you-2020","title":"Make Your Notes Work for You (2020)"}}},"pageContext":{"id":"4d1b30c7-1c53-568f-a80e-39dc64b5fb99"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}