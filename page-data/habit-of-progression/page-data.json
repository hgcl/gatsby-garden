{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/habit-of-progression","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"habit-of-progression\"\n  }, \"Habit of Progression\"), mdx(\"p\", null, \"A habit of progression is a continuous effort leading to sustained and expected outputs.\"), mdx(\"p\", null, \"To build a habit of progression, the following statements need to be true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inputs are consistent over time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intentional inputs lead to expected outputs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/outputs-must-be-aligned-with-your-goals\",\n    \"title\": \"outputs-must-be-aligned-with-your-goals\"\n  }, \"[[outputs-must-be-aligned-with-your-goals]]\"), \"\")), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7how-to-be-great-just-be-good-repeatably-2020\",\n    \"title\": \"How to Be Great? Just Be Good, Repeatably (2020)\"\n  }, \"\\xA7how-to-be-great-just-be-good-repeatably-2020\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"outputs-must-be-aligned-with-your-goals\"\n  }, \"Outputs Must Be Aligned With Your Goals\"), mdx(\"p\", null, \"This is one of the three statements of the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"habit-of-progression\",\n    \"title\": \"Habit of Progression\"\n  }, \"habit-of-progression\"), \"] concept.\"), mdx(\"p\", null, \"It is kind of intuitive, but the wrong consistent inputs will lead to unwanted outputs in the long-term. For example, choosing to do a degree that is not aligned with your true career wishes will not truly help you.\"), mdx(\"p\", null, \"To discover what inputs lead to wanted outputs, you can experiment and iterate. A lot.\"), mdx(\"p\", null, \"Find the right habit by intentionally testing out more inputs / outputs dynamics. Iterate monthly, weekly or even daily.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Ask yourself the question: \\u201CIf I were to continue this every day for the next year, would I be in a better place?\\u201D \"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2014 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Steph Smith, [\", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"%C2%A7how-to-be-great-just-be-good-repeatably-2020\",\n    \"title\": \"How to Be Great? Just Be Good, Repeatably (2020)\"\n  }, \"\\xA7how-to-be-great-just-be-good-repeatably-2020\"), \"]\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7how-to-be-great-just-be-good-repeatably-2020\",\n    \"title\": \"How to Be Great? Just Be Good, Repeatably (2020)\"\n  }, \"\\xA7how-to-be-great-just-be-good-repeatably-2020\"), \"]\"), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"stop-speculating-about-what-is-best\",\n    \"title\": \"Stop Speculating About What Is Best\"\n  }, \"stop-speculating-about-what-is-best\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b137f94d-bba9-5a97-aabf-04034f7e7dda","fields":{"slug":"/outputs-must-be-aligned-with-your-goals","title":"Outputs Must Be Aligned With Your Goals"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://blog.stephsmith.io/how-to-be-great/\",\n  \"author\": \"Steph Smith\",\n  \"publishingdate\": \"2020\",\n  \"dateretrieved\": \"2020-11-23\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-be-great-just-be-good-repeatably-2020\"\n  }, \"How to Be Great? Just Be Good, Repeatably (2020)\"), mdx(\"h2\", {\n    \"id\": \"notes\"\n  }, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inputs => Outputs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuous effort leads to greatness when the following statements are true:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inputs are consistent over time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intentional inputs lead to expected outputs\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are ups and downs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"With the ups, there are always downs. This seems obvious, but we often forget this when we are in periods of down. We quit at these local minimums \", \"[\\u2026]\", \", because we cannot see the next peak right around the corner. \"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/polymath-as-an-excuse\",\n    \"title\": \"polymath-as-an-excuse\"\n  }, \"[[polymath-as-an-excuse]]\"), \"?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"It\\u2019s easy to pivot from side project to side project, focusing on the new shiny object of the month.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Establish a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/habit-of-progression\",\n    \"title\": \"habit-of-progression\"\n  }, \"[[habit-of-progression]]\"), \", but in the right direction\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Habit of progression = consistently be good / decent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input => Outputs, but are the inputs producing the outputs you want?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Being consistent with something leading you in the wrong direction, will unsurprisingly lead you in the wrong direction.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Getting a degree you don\\u2019t really want\\u2026\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find the right habit by intentionally testing out more inputs => outputs, iterate monthly / weekly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ask yourself the question: \\u201CIf I were to continue this every day for the next year, would I be in a better place?\\u201D\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"%C2%A7becoming-a-magician-2018\",\n    \"title\": \"Becoming a Magician (2018)\"\n  }, \"\\xA7becoming-a-magician-2018\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You cannot imagine how to become a magician.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/stop-speculating-about-what-is-best\",\n    \"title\": \"stop-speculating-about-what-is-best\"\n  }, \"[[stop-speculating-about-what-is-best]]\"), \", don\\u2019t try to be perfect\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not try to be perfect at your first shot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Atomic Habits\"), \" by James Clear, he describes a study with two groups of photographers in a photo competition. The first group would be judged solely on the numbers of photographs submitted, while the second would be judged on the excellence of a single image. The best pictures were actually taken by the \\u201Cquantity group\\u201D.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The \\u201Csearch\\u201D for greatness is often misguided, perhaps because what we imagine to be great, is in fact not that great at all.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In being consistent over time, you become the outlier. \")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"08674868-10aa-5e36-904b-5b11d4f1e547","fields":{"slug":"/§how-to-be-great-just-be-good-repeatably-2020","title":"How to Be Great? Just Be Good, Repeatably (2020)"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"becoming-a-magician-incrementally\"\n  }, \"Becoming a Magician Incrementally\"), mdx(\"h2\", {\n    \"id\": \"two-approaches-to-becoming-great\"\n  }, \"Two Approaches to Becoming Great\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"ignoring-your-path-to-become-a-magician\",\n    \"title\": \"Ignoring Your Path to Become a Magician\"\n  }, \"ignoring-your-path-to-become-a-magician\"), \"] is Autotranslucence\\u2019s method to becoming great\\u2014a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"magician\",\n    \"title\": \"Magician\"\n  }, \"magician\"), \"] in other words. She argues that becoming a magician requires an impossible jump sideways and forward. Building strategies today would be pure speculation as you are restricted by your current mental models. Instead, she suggests letting your subconscious do the job\\u2014once you have found your magician role models.\"), mdx(\"p\", null, \"On the other hand, Steph Smith argues that building a [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"habit-of-progression\",\n    \"title\": \"Habit of Progression\"\n  }, \"habit-of-progression\"), \"] is the infallible secret to becoming great.\"), mdx(\"h2\", {\n    \"id\": \"aligning-both-approaches\"\n  }, \"Aligning Both Approaches\"), mdx(\"p\", null, \"Both approaches have strong similarities. \"), mdx(\"p\", null, \"For Autotranslucence and Smith, the magician is the goal, it is the long-term vision. That\\u2019s the reason why that status may seem impossible and unattainable.\"), mdx(\"p\", null, \"Contrarily, the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"habit-of-progression\",\n    \"title\": \"Habit of Progression\"\n  }, \"habit-of-progression\"), \"] method only takes action in the short-term. This approach doesn\\u2019t give you a set life roadmap from A to Z. It focuses on small changes that you can integrate into your life to become better day by day.\"), mdx(\"p\", null, \"The secret to becoming a magician might just be to build your path incrementally, with sideways and back steps along the way, but always with the end goal and vision in mind.\"), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WARNING: still WIP under this point\")), mdx(\"hr\", null), mdx(\"p\", null, \"Parallel with business approach:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You need a business vision even though it may seem impossible / utopian.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not because vision seems impossible that you shouldn\\u2019t have a strategy for today. You need to align it with the vision.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"5267d283-68af-506d-821d-3348dfc9efd7","fields":{"slug":"/becoming-a-magician-incrementally","title":"Becoming a Magician Incrementally"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"literature\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"outputs-must-be-aligned-with-your-goals\"\n  }, \"Outputs Must Be Aligned With Your Goals\"), mdx(\"p\", null, \"This is one of the three statements of the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"habit-of-progression\",\n    \"title\": \"Habit of Progression\"\n  }, \"habit-of-progression\"), \"] concept.\"), mdx(\"p\", null, \"It is kind of intuitive, but the wrong consistent inputs will lead to unwanted outputs in the long-term. For example, choosing to do a degree that is not aligned with your true career wishes will not truly help you.\"), mdx(\"p\", null, \"To discover what inputs lead to wanted outputs, you can experiment and iterate. A lot.\"), mdx(\"p\", null, \"Find the right habit by intentionally testing out more inputs / outputs dynamics. Iterate monthly, weekly or even daily.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Ask yourself the question: \\u201CIf I were to continue this every day for the next year, would I be in a better place?\\u201D \"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2014 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Steph Smith, [\", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"%C2%A7how-to-be-great-just-be-good-repeatably-2020\",\n    \"title\": \"How to Be Great? Just Be Good, Repeatably (2020)\"\n  }, \"\\xA7how-to-be-great-just-be-good-repeatably-2020\"), \"]\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Reference: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%C2%A7how-to-be-great-just-be-good-repeatably-2020\",\n    \"title\": \"How to Be Great? Just Be Good, Repeatably (2020)\"\n  }, \"\\xA7how-to-be-great-just-be-good-repeatably-2020\"), \"]\"), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"stop-speculating-about-what-is-best\",\n    \"title\": \"Stop Speculating About What Is Best\"\n  }, \"stop-speculating-about-what-is-best\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b137f94d-bba9-5a97-aabf-04034f7e7dda","fields":{"slug":"/outputs-must-be-aligned-with-your-goals","title":"Outputs Must Be Aligned With Your Goals"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"reference\", \"article\"],\n  \"source\": \"https://blog.stephsmith.io/how-to-be-great/\",\n  \"author\": \"Steph Smith\",\n  \"publishingdate\": \"2020\",\n  \"dateretrieved\": \"2020-11-23\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-be-great-just-be-good-repeatably-2020\"\n  }, \"How to Be Great? Just Be Good, Repeatably (2020)\"), mdx(\"h2\", {\n    \"id\": \"notes\"\n  }, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inputs => Outputs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuous effort leads to greatness when the following statements are true:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inputs are consistent over time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intentional inputs lead to expected outputs\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are ups and downs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"With the ups, there are always downs. This seems obvious, but we often forget this when we are in periods of down. We quit at these local minimums \", \"[\\u2026]\", \", because we cannot see the next peak right around the corner. \"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/polymath-as-an-excuse\",\n    \"title\": \"polymath-as-an-excuse\"\n  }, \"[[polymath-as-an-excuse]]\"), \"?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"It\\u2019s easy to pivot from side project to side project, focusing on the new shiny object of the month.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Establish a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/habit-of-progression\",\n    \"title\": \"habit-of-progression\"\n  }, \"[[habit-of-progression]]\"), \", but in the right direction\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Habit of progression = consistently be good / decent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input => Outputs, but are the inputs producing the outputs you want?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Being consistent with something leading you in the wrong direction, will unsurprisingly lead you in the wrong direction.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: Getting a degree you don\\u2019t really want\\u2026\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find the right habit by intentionally testing out more inputs => outputs, iterate monthly / weekly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ask yourself the question: \\u201CIf I were to continue this every day for the next year, would I be in a better place?\\u201D\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"%C2%A7becoming-a-magician-2018\",\n    \"title\": \"Becoming a Magician (2018)\"\n  }, \"\\xA7becoming-a-magician-2018\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You cannot imagine how to become a magician.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/stop-speculating-about-what-is-best\",\n    \"title\": \"stop-speculating-about-what-is-best\"\n  }, \"[[stop-speculating-about-what-is-best]]\"), \", don\\u2019t try to be perfect\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not try to be perfect at your first shot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Atomic Habits\"), \" by James Clear, he describes a study with two groups of photographers in a photo competition. The first group would be judged solely on the numbers of photographs submitted, while the second would be judged on the excellence of a single image. The best pictures were actually taken by the \\u201Cquantity group\\u201D.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The \\u201Csearch\\u201D for greatness is often misguided, perhaps because what we imagine to be great, is in fact not that great at all.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In being consistent over time, you become the outlier. \")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"08674868-10aa-5e36-904b-5b11d4f1e547","fields":{"slug":"/§how-to-be-great-just-be-good-repeatably-2020","title":"How to Be Great? Just Be Good, Repeatably (2020)"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"fleeting\", \"openquestion\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"can-polymaths-be-magicians\"\n  }, \"Can Polymaths Be Magicians\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/becoming-a-magician-incrementally\",\n    \"title\": \"becoming-a-magician-incrementally\"\n  }, \"[[becoming-a-magician-incrementally]]\"), \" => you need to build a [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"habit-of-progression\",\n    \"title\": \"Habit of Progression\"\n  }, \"habit-of-progression\"), \"], is that equal to specializing (a.k.a. not being a polymath)?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Are there some inspiring examples of polymaths as magicians?\")), mdx(\"p\", null, \"Interesting source: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/accelerated-intelligence/modern-polymath-81f882ce52db\"\n  }, \"https://medium.com/accelerated-intelligence/modern-polymath-81f882ce52db\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"fb10a70a-155a-5cbd-8b7f-364c4b28ca84","fields":{"slug":"/can-polymaths-be-magicians","title":"Can Polymaths Be Magicians"}}}]},"fields":{"slug":"/habit-of-progression","title":"Habit of Progression"}}},"pageContext":{"id":"37af115a-e720-5c2e-97ea-13eb8677af25"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}