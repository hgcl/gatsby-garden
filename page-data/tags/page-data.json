{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/tags","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tags\"\n  }, \"Tags\"), mdx(\"p\", null, \"Here are different tags I use in my PKM ([\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"about-this-digital-garden\",\n    \"title\": \"About This Digital Garden\"\n  }, \"about-this-digital-garden\"), \"]).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#openquestion\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#needsource\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#needoriginalsource\"))), mdx(\"p\", null, \"All different [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"types-of-notes\",\n    \"title\": \"Types of Notes\"\n  }, \"types-of-notes\"), \"] are also added to the tags.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"file-naming-in-this-pkm\",\n    \"title\": \"File Naming in This PKM\"\n  }, \"file-naming-in-this-pkm\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"index\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"about-this-digital-garden\"\n  }, \"About This Digital Garden\"), mdx(\"p\", null, \"This is an index of everything meta about this [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"tk-personal-knowledge-management\",\n    \"title\": \"TK Personal Knowledge Management\"\n  }, \"tk-personal-knowledge-management\"), \"] system.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"digital-garden-as-a-playground\",\n    \"title\": \"Digital Garden as a Playground\"\n  }, \"digital-garden-as-a-playground\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"building-blocks\"\n  }, \"Building blocks\"), mdx(\"p\", null, \"This digital garden is built on top of [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"foam\",\n    \"title\": \"Foam\"\n  }, \"foam\"), \"]. To publish it, I use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mathieudutour/foam-gatsby-template\"\n  }, \"foam-gatsby-template\"), \".\"), mdx(\"h2\", {\n    \"id\": \"system-and-methodologies\"\n  }, \"System and methodologies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"types-of-notes\",\n    \"title\": \"Types of Notes\"\n  }, \"types-of-notes\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tags\",\n    \"title\": \"Tags\"\n  }, \"tags\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"file-naming-in-this-pkm\",\n    \"title\": \"File Naming in This PKM\"\n  }, \"file-naming-in-this-pkm\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"becbd00d-99c3-50ce-bcb7-fa32f43c9e47","fields":{"slug":"/about-this-digital-garden","title":"About This Digital Garden"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"types-of-notes\"\n  }, \"Types of Notes\"), mdx(\"p\", null, \"My note-taking system is almost fully based on the [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"fleeting-notes\",\n    \"title\": \"Fleeting Notes\"\n  }, \"fleeting-notes\"), \"] record transient thoughts and reading notes. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"literature-notes\",\n    \"title\": \"Literature Notes\"\n  }, \"literature-notes\"), \"] are atomic concepts or ideas that stem from these first notes\\u2014they are always clearly referencing the original sources. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"permanent-notes\",\n    \"title\": \"Permanent Notes\"\n  }, \"permanent-notes\"), \"] are original ideas that I form from these foundations. They are also atomic concepts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"index-notes\",\n    \"title\": \"Index Notes\"\n  }, \"index-notes\"), \"] are outlines allowing me to structure notes around an idea.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tk-notes\",\n    \"title\": \"TK Notes\"\n  }, \"tk-notes\"), \"] are idea notes that are not active yet\\u2014and might never be.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reference notes are my notes based on original sources. They can be blog posts, articles, podcasts, etc.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"tk-personal-knowledge-management\",\n    \"title\": \"TK Personal Knowledge Management\"\n  }, \"tk-personal-knowledge-management\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f0ca147b-2f7b-5f0e-a4f8-2a7b0fe2e1a0","fields":{"slug":"/types-of-notes","title":"Types of Notes"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"fleeting\", \"permanent\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"file-naming-in-this-pkm\"\n  }, \"File Naming in This PKM\"), mdx(\"h2\", {\n    \"id\": \"filenames\"\n  }, \"Filenames\"), mdx(\"p\", null, \"To support [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"foam\",\n    \"title\": \"Foam\"\n  }, \"foam\"), \"], the Markdown files in this PKM are named in \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"kebab-case\"), \". \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All reference notes begin with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\xA7\"), \" symbol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tk-notes\",\n    \"title\": \"TK Notes\"\n  }, \"tk-notes\"), \"] titles start with the letters \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tk\"), \".\")), mdx(\"h2\", {\n    \"id\": \"headlines\"\n  }, \"Headlines\"), mdx(\"p\", null, \"Each note also starts with a headline loosely written in \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Title Case\"), \".\"), mdx(\"hr\", null), mdx(\"p\", null, \"Relevant notes: [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"tk-personal-knowledge-management\",\n    \"title\": \"TK Personal Knowledge Management\"\n  }, \"tk-personal-knowledge-management\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4d9b5629-0cb5-59bf-84f7-a4fe3809e3d1","fields":{"slug":"/file-naming-in-this-pkm","title":"File Naming in This PKM"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"index\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"about-this-digital-garden\"\n  }, \"About This Digital Garden\"), mdx(\"p\", null, \"This is an index of everything meta about this [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"tk-personal-knowledge-management\",\n    \"title\": \"TK Personal Knowledge Management\"\n  }, \"tk-personal-knowledge-management\"), \"] system.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"digital-garden-as-a-playground\",\n    \"title\": \"Digital Garden as a Playground\"\n  }, \"digital-garden-as-a-playground\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"building-blocks\"\n  }, \"Building blocks\"), mdx(\"p\", null, \"This digital garden is built on top of [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"foam\",\n    \"title\": \"Foam\"\n  }, \"foam\"), \"]. To publish it, I use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mathieudutour/foam-gatsby-template\"\n  }, \"foam-gatsby-template\"), \".\"), mdx(\"h2\", {\n    \"id\": \"system-and-methodologies\"\n  }, \"System and methodologies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"zettelkasten-method\",\n    \"title\": \"Zettelkasten Method\"\n  }, \"zettelkasten-method\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"types-of-notes\",\n    \"title\": \"Types of Notes\"\n  }, \"types-of-notes\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tags\",\n    \"title\": \"Tags\"\n  }, \"tags\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"file-naming-in-this-pkm\",\n    \"title\": \"File Naming in This PKM\"\n  }, \"file-naming-in-this-pkm\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"becbd00d-99c3-50ce-bcb7-fa32f43c9e47","fields":{"slug":"/about-this-digital-garden","title":"About This Digital Garden"}}}]},"fields":{"slug":"/tags","title":"Tags"}}},"pageContext":{"id":"a973748a-34e3-5494-9ddc-f625ad0ec02b"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}